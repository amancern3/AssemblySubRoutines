LINE ADDR CONTENTS SOURCE LINE
  1.              	.equ @,$000	; main program
  2.              	.equ stack, $E00
  3.              
  4.  000 022E00  	lds stack
  5.  001 030000  	ldf#	0
  6.              
  7.  002 080008  	psh# string
  8.  003 080011  	psh#	string_len
  9.  004 08000E  	psh#	conv_string
 10.              
 11.  005 412020  	jsr	swapcase
 12.  006 120002  	ads#	2
 13.  007 FFFFFF  	hlt
 14.              
 15.  008 486F77  string:	.char 'How many cookies?', string_len
      009 206D61
      00A 6E7920
      00B 636F6F
      00C 6B6965
      00D 733F20
 16.  00E FFFFFFFFFFFFFFFF  conv_string:	.blkw string_len
 17.              
 18.              
 19.              	.equ @, $020	; subroutine to swith case in a string
 20.              	.equ output, 2
 21.              	.equ len, 3
 22.              	.equ input, 4
 23.              
 24.  020 680000  swapcase:	bgn# 0
 25.  021 010000  	ldx# 0
 26.              
 27.  022 507004  loop: 	ldc* !input
 28.              
 29.  023 200041  lower: 	cma# 'A'	; converstion of upper to lower case -- also checks if the current char is to be ignored in the converstion
 30.                     	;jge upper
 31.  024 4A2033  	jlt next
 32.              
 33.  025 20005A         	cma# 'Z'
 34.                    	;jle upper
 35.  026 4D202B  	jgt upper
 36.              
 37.  027 100020        	ada# 'a' - 'A'
 38.  028 402033  	jmp next
 39.              
 40.  029 200020        	cma# ' '
 41.  02A 482033         	jeq next
 42.              
 43.  02B 200061  upper:	cma# 'a'	; converstion of lower to upper case --also checks if the current char is to be ignored in the converstion
 44.  02C 4A2033         	jlt next
 45.  02D 20007A         	cma# 'z'
 46.  02E 4D2033         	jgt next
 47.  02F 140020         	sba# 32
 48.  030 517002        	stc* !output
 49.  031 110001        	adx# 1
 50.  032 402022         	jmp loop
 51.              
 52.  033 517002  next: 	stc* !output
 53.  034 110001        	adx# 1
 54.  035 213003       	 cmx ! len
 55.              
 56.  036 4A2022        	jlt loop	; end clause
 57.  037 690000        	fin# 0
 58.  038 FFF040       	rtn
 59.              

                     SYMBOL TABLE CONTENTS

00000E = CONV_STRING     000004 = INPUT           000003 = LEN             
000022 = LOOP            000023 = LOWER           000033 = NEXT            
000002 = OUTPUT          000E00 = STACK           000008 = STRING          
000011 = STRING_LEN      000020 = SWAPCASE        00002B = UPPER           
