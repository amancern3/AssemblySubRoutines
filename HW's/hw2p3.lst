
  1.              	.equ @, $000
  2.  000 000000  	lda#	0
  3.  001 042021  	sta temp_v
  4.  002 010000  	ldx#	0
  5.  003 052020  	stx j 
  6.  004 05201F  	stx i
  7.  005 010000  	ldx# 0
  8.              
  9.  006 01201F  for_1:	ldx i
 10.  007 210100  	cmx#	length	; outer loop to iterate through array
 11.  008 4D201E  	jgt	end_pgrm
 12.              	
 13.  009 052020  	stx j 	; current position is the index of interest 
 14.  00A 004101  	lda+ ARRAY
 15.  00B 042021  	sta temp_v
 16.              
 17.  00C 210000  	cmx#	0	; j > 0
 18.  00D 4D2011  	jgt for_2
 19.              
 20.  00E 110001  	adx#	1
 21.  00F 05201F  	stx i 
 22.  010 402006  	jmp for_1
 23.              
 24.              for_2:
 25.  011 004100  	lda+	ARRAY - 1	
 26.              
 27.  012 202021  if:	cma temp_v
 28.  013 4D2018  	jgt swap	; swap if condition of a[i] > a[i+1] is satisfied 
 29.  014 002021  	lda temp_v
 30.              	
 31.  015 044101  	sta+	ARRAY	
 32.  016 1B201F  	inc i
 33.  017 402006  	jmp for_1
 34.              			; use swap method from book - TA 
 35.  018 044101  swap:	sta+	ARRAY
 36.  019 012020  	ldx j 
 37.  01A 150001  	sbx# 1
 38.  01B 052020  	stx j
 39.  01C 012020  	ldx j
 40.  01D 402006  	jmp for_1
 41.              
 42.  01E FFFFFF  end_pgrm:	hlt
 43.  01F 000001  i:	.word 1
 44.  020 000001  j:	.word 1
 45.  021 000000  temp_v:	.word 0
 46.  022 000000  temp_i:	.word 0
 47.              
 48.              	.equ @, $100
 49.  100 000000  length:	.word 0
 50.  101 000064  ARRAY:	.word 100
 51.  102 00004A  	.word 74
 52.  103 FFFF70  	.word -144
 53.  104 002726  	.word 10022
 54.  105 000291  	.word 657
 55.  106 FFFFDF  	.word -33

                     SYMBOL TABLE CONTENTS

000101 = ARRAY           00001E = END_PGRM        000006 = FOR_1           
000011 = FOR_2           00001F = I               000012 = IF              
000020 = J               000100 = LENGTH          000018 = SWAP            
000022 = TEMP_I          000021 = TEMP_V          