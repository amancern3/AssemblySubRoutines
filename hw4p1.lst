LINE ADDR CONTENTS SOURCE LINE
  1.              	.equ @,$000	; main program
  2.              	.equ stack, $E00
  3.              
  4.  000 022E00  	lds stack
  5.  001 030000  	ldf#	0
  6.              
  7.  002 080008  	psh# string
  8.  003 080011  	psh#	string_len
  9.  004 08000E  	psh#	conv_string
 10.              
 11.  005 412020  	jsr	swapcase
 12.  006 120002  	ads#	2
 13.  007 FFFFFF  	hlt
 14.              
 15.  008 686F57  string:	.char 'hoW Many Cookies?', string_len
      009 204D61
      00A 6E7920
      00B 436F6F
      00C 6B6965
      00D 733F20
 16.  00E FFFFFFFFFFFFFFFF  conv_string:	.blkw string_len
 17.              
 18.              
 19.              	.equ @, $020	; subroutine to swith case in a string 
 20.              	.equ output, 2
 21.              	.equ len, 3
 22.              	.equ input, 4
 23.              	
 24.  020 680000  swapcase:	bgn# 0
 25.  021 010000  	ldx# 0
 26.              
 27.  022 507004  loop: 	ldc* !input
 28.              
 29.  023 200061  lower: 	cma# 'a'	; converstion of lower to upper -- also checks if the current char is to be ignored in the converstion 
 30.  024 4B202D         	jge upper
 31.  025 4A2035  	jlt next
 32.              
 33.  026 20007A         	cma# 'z'
 34.  027 4C202D        	jle upper
 35.  028 4D2035  	jgt next
 36.              
 37.  029 140020        	sba# 'a' - 'A'
 38.  02A 402035  	jmp next
 39.              
 40.  02B 200020        	cma# ' '
 41.  02C 482035         	jeq next
 42.              	
 43.  02D 200041  upper:	cma# 'A'	; converstion of upper to lower --also checks if the current char is to be ignored in the converstion 
 44.  02E 4A2035         	jlt next
 45.  02F 20005A         	cma# 'Z'
 46.  030 4D2035         	jgt next
 47.  031 100020         	ada# 'a' - 'A'
 48.  032 517002        	stc* !output
 49.  033 110001        	adx# 1
 50.  034 402022         	jmp loop
 51.              	
 52.  035 517002  next: 	stc* !output
 53.  036 110001        	adx# 1
 54.  037 213003       	 cmx ! len
 55.              	
 56.  038 4A2022        	jlt loop	; end clause 
 57.  039 690000        	fin# 0
 58.  03A FFF040       	rtn
 59.              
 60.              

                     SYMBOL TABLE CONTENTS

00000E = CONV_STRING     000004 = INPUT           000003 = LEN             
000022 = LOOP            000023 = LOWER           000035 = NEXT            
000002 = OUTPUT          000E00 = STACK           000008 = STRING          
000011 = STRING_LEN      000020 = SWAPCASE        00002D = UPPER           
