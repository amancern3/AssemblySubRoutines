	.equ @, $000
	.equ N,3
	.equ M,3
	.equ @,$000
	.equ STACKTOP, $E00
	.equ AT_address, $E07

	; use CBA method for arrays since only have to pass address of the array to be transposed

	lds#	STACKTOP	;top of stap
	ldf#	0

	psh#	matrix
	psh#	N
	psh#	M
	psh#	AT_address
	jsr	transpose
	ads#	4	;destroy stack 
	hlt

matrix:	.blkw N*M
AT_address:	.blkw M*N

	.equ @, $020
	.equ AT, 2
	.equ	N, 4
	.equ	M, 3
	.equ A, 1
		
	
transpose:	bgn#	0	;decode stack information 
	tsf
	ldx#	0
	lda#	0
	sta i 
	sta j		; i = j = 0 ready to get transpose	

	lda	i
for_i:	cma# ! N - 1	
	jeq end_transp
	sta pos_m
	clr j 
	tax

	ldx pos_n	; loading the current position in the current row 
	lda& ! A
	adx# 1
	stx pos_n	; updating position for transpose array

	
	ada# ! M-1
	sta	j_end
	cmx j_end
	jgt	end_2
	
for_j:	ldx	j
	cmx# ! M
	lda& ! matrix	; load the ACC w a[n][m] values and save them in a[m][n] locations 
	sta& ! AT

	
	inc i 
	jmp for_i


i:	.word 0
j:	.word 0
